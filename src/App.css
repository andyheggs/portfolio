/* Default mobile-first styles: stack elements vertically */
.layout-container {
  display: block;  /* On small screens, children will stack (block flow) */
  /* (No special layout needed for mobile; by default <div> is full width) */
}

.sidebar {
  margin: 0px;
  padding: 0px; /* Sidebar defaults: no special positioning on mobile, it will be just a block */
}

.main-content {
  padding: 0.5rem;          /* Corrected spacing unit */
  box-sizing: border-box;   /* Ensure padding is included in the width */
  max-width: 100vw;
  /* Main content defaults: also normal block flow on mobile */
}

/* Desktop layout: two columns side by side when screen width ≥ 768px */
@media (min-width: 768px) {
  .layout-container {
    display: grid;                     /* Use CSS Grid to arrange two columns */
    grid-template-columns: min(500px, 100%) 1fr;
    gap: 80px;
    max-width: 100vw;
    margin: 0 auto;  /* Sidebar 300px, main content fills the rest */
    /* You can adjust the sidebar width as needed (e.g., 250px or a percentage).
       Using a fixed pixel width for the sidebar ensures the left panel stays a consistent size.
       The right column is 1fr (one fractional unit) to take up remaining space. */
  }

  .sidebar {
    position: sticky;
    top: 0;          /* Stick the sidebar to the top of the viewport on scroll */
    height: 100vh;   /* Optional: make sidebar span full viewport height */
    /* The sidebar will now behave like a fixed column. It remains visible
       as the user scrolls, until the bottom of its parent container is reached.
       Height is set to 100vh so that the sidebar background (if any) covers the full height of the screen. */
    /* If the combined Hero+Navbar content is taller than the viewport, the sidebar will scroll internally.
       In such a case, you can allow internal scrolling: */
    /* overflow-y: auto; */  /* (Enable scrolling inside sidebar if content overflows) */
  }

  .main-content {
    /* The right side will scroll normally as part of the page.
       No special positioning needed since it's the grid second column. */
    padding: 0.5 rem;  /* Optional: add some padding for nicer layout */
    /* By default, overflow is visible, allowing content to extend vertically.
       This column will expand as needed to fit all its sections and will have the page’s scrollbar. */
  }
}

/* Ensuring proper stacking on small screens (<768px) */
@media (max-width: 767px) {
  .sidebar, .main-content {
    width: 100%;   /* Make both containers full width on mobile */
    /* They will stack on top of each other in the given order (sidebar first, then main-content) */
  }
}
